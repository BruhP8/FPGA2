// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "calculateLayer4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic calculateLayer4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic calculateLayer4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<33> calculateLayer4::ap_ST_fsm_state1 = "1";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state2 = "10";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state3 = "100";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state4 = "1000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state5 = "10000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state6 = "100000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state7 = "1000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state8 = "10000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state9 = "100000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state10 = "1000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state11 = "10000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state12 = "100000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<33> calculateLayer4::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<32> calculateLayer4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> calculateLayer4::ap_const_lv32_16 = "10110";
const sc_lv<32> calculateLayer4::ap_const_lv32_1E = "11110";
const sc_lv<32> calculateLayer4::ap_const_lv32_1 = "1";
const sc_lv<1> calculateLayer4::ap_const_lv1_0 = "0";
const sc_lv<32> calculateLayer4::ap_const_lv32_2 = "10";
const sc_lv<32> calculateLayer4::ap_const_lv32_3 = "11";
const sc_lv<32> calculateLayer4::ap_const_lv32_4 = "100";
const sc_lv<32> calculateLayer4::ap_const_lv32_5 = "101";
const sc_lv<32> calculateLayer4::ap_const_lv32_6 = "110";
const sc_lv<32> calculateLayer4::ap_const_lv32_A = "1010";
const sc_lv<32> calculateLayer4::ap_const_lv32_F = "1111";
const sc_lv<32> calculateLayer4::ap_const_lv32_10 = "10000";
const sc_lv<32> calculateLayer4::ap_const_lv32_18 = "11000";
const sc_lv<7> calculateLayer4::ap_const_lv7_0 = "0000000";
const sc_lv<32> calculateLayer4::ap_const_lv32_20 = "100000";
const sc_lv<17> calculateLayer4::ap_const_lv17_0 = "00000000000000000";
const sc_lv<11> calculateLayer4::ap_const_lv11_0 = "00000000000";
const sc_lv<6> calculateLayer4::ap_const_lv6_0 = "000000";
const sc_lv<3> calculateLayer4::ap_const_lv3_0 = "000";
const sc_lv<32> calculateLayer4::ap_const_lv32_17 = "10111";
const sc_lv<32> calculateLayer4::ap_const_lv32_B = "1011";
const sc_lv<32> calculateLayer4::ap_const_lv32_7 = "111";
const sc_lv<32> calculateLayer4::ap_const_lv32_1F = "11111";
const sc_lv<64> calculateLayer4::ap_const_lv64_3FE55555571F7693 = "11111111100101010101010101010101010111000111110111011010010011";
const sc_lv<64> calculateLayer4::ap_const_lv64_3FFB74538EF34D6A = "11111111111011011101000101001110001110111100110100110101101010";
const sc_lv<32> calculateLayer4::ap_const_lv32_11 = "10001";
const sc_lv<32> calculateLayer4::ap_const_lv32_19 = "11001";
const sc_lv<17> calculateLayer4::ap_const_lv17_4E3 = "10011100011";
const sc_lv<7> calculateLayer4::ap_const_lv7_64 = "1100100";
const sc_lv<7> calculateLayer4::ap_const_lv7_1 = "1";
const sc_lv<2> calculateLayer4::ap_const_lv2_0 = "00";
const sc_lv<11> calculateLayer4::ap_const_lv11_4E2 = "10011100010";
const sc_lv<11> calculateLayer4::ap_const_lv11_1 = "1";
const sc_lv<6> calculateLayer4::ap_const_lv6_19 = "11001";
const sc_lv<6> calculateLayer4::ap_const_lv6_1 = "1";
const sc_lv<5> calculateLayer4::ap_const_lv5_0 = "00000";
const sc_lv<1> calculateLayer4::ap_const_lv1_1 = "1";
const sc_lv<3> calculateLayer4::ap_const_lv3_5 = "101";
const sc_lv<3> calculateLayer4::ap_const_lv3_1 = "1";
const sc_lv<12> calculateLayer4::ap_const_lv12_19 = "11001";
const bool calculateLayer4::ap_const_boolean_1 = true;

calculateLayer4::calculateLayer4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Layer3_Weights_CPU_U = new calculateLayer4_Layer3_Weights_CPU("Layer3_Weights_CPU_U");
    Layer3_Weights_CPU_U->clk(ap_clk);
    Layer3_Weights_CPU_U->reset(ap_rst);
    Layer3_Weights_CPU_U->address0(Layer3_Weights_CPU_address0);
    Layer3_Weights_CPU_U->ce0(Layer3_Weights_CPU_ce0);
    Layer3_Weights_CPU_U->q0(Layer3_Weights_CPU_q0);
    grp_generic_tanh_double_s_fu_200 = new generic_tanh_double_s("grp_generic_tanh_double_s_fu_200");
    grp_generic_tanh_double_s_fu_200->ap_clk(ap_clk);
    grp_generic_tanh_double_s_fu_200->ap_rst(ap_rst);
    grp_generic_tanh_double_s_fu_200->ap_start(grp_generic_tanh_double_s_fu_200_ap_start);
    grp_generic_tanh_double_s_fu_200->ap_done(grp_generic_tanh_double_s_fu_200_ap_done);
    grp_generic_tanh_double_s_fu_200->ap_idle(grp_generic_tanh_double_s_fu_200_ap_idle);
    grp_generic_tanh_double_s_fu_200->ap_ready(grp_generic_tanh_double_s_fu_200_ap_ready);
    grp_generic_tanh_double_s_fu_200->t_in(reg_234);
    grp_generic_tanh_double_s_fu_200->ap_return(grp_generic_tanh_double_s_fu_200_ap_return);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37 = new nerons_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37");
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->clk(ap_clk);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->reset(ap_rst);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->din0(somme_2_reg_179);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->din1(tmp_7_reg_587);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->ce(ap_var_for_const0);
    nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37->dout(grp_fu_211_p2);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38 = new nerons_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38");
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->clk(ap_clk);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->reset(ap_rst);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->din0(Layer3_Weights_CPU_l_reg_577);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->din1(Layer3_Neurons_CPU_l_reg_582);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->ce(ap_var_for_const0);
    nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38->dout(grp_fu_216_p2);
    nerons_fptrunc_64ns_32_2_1_U39 = new nerons_fptrunc_64ns_32_2_1<1,2,64,32>("nerons_fptrunc_64ns_32_2_1_U39");
    nerons_fptrunc_64ns_32_2_1_U39->clk(ap_clk);
    nerons_fptrunc_64ns_32_2_1_U39->reset(ap_rst);
    nerons_fptrunc_64ns_32_2_1_U39->din0(reg_234);
    nerons_fptrunc_64ns_32_2_1_U39->ce(ap_var_for_const0);
    nerons_fptrunc_64ns_32_2_1_U39->dout(grp_fu_220_p1);
    nerons_fpext_32ns_64_2_1_U40 = new nerons_fpext_32ns_64_2_1<1,2,32,64>("nerons_fpext_32ns_64_2_1_U40");
    nerons_fpext_32ns_64_2_1_U40->clk(ap_clk);
    nerons_fpext_32ns_64_2_1_U40->reset(ap_rst);
    nerons_fpext_32ns_64_2_1_U40->din0(somme_2_reg_179);
    nerons_fpext_32ns_64_2_1_U40->ce(ap_var_for_const0);
    nerons_fpext_32ns_64_2_1_U40->dout(grp_fu_224_p1);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41 = new nerons_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>("nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41");
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->clk(ap_clk);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->reset(ap_rst);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->din0(grp_fu_228_p0);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->din1(grp_fu_228_p1);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->ce(ap_var_for_const0);
    nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41->dout(grp_fu_228_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Layer3_Neurons_CPU_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln48_1_fu_484_p1 );

    SC_METHOD(thread_Layer3_Neurons_CPU_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_Layer3_Weights_CPU_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln43_fu_258_p1 );
    sensitive << ( zext_ln48_fu_480_p1 );

    SC_METHOD(thread_Layer3_Weights_CPU_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_Layer4_Neurons_CPU_address0);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( zext_ln50_fu_488_p1 );

    SC_METHOD(thread_Layer4_Neurons_CPU_ce0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_Layer4_Neurons_CPU_d0);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( grp_fu_220_p1 );

    SC_METHOD(thread_Layer4_Neurons_CPU_we0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_add_ln42_fu_240_p2);
    sensitive << ( phi_mul_reg_123 );

    SC_METHOD(thread_add_ln44_1_fu_287_p2);
    sensitive << ( indvar_flatten19_reg_135 );

    SC_METHOD(thread_add_ln44_2_fu_307_p2);
    sensitive << ( j_0_reg_146 );

    SC_METHOD(thread_add_ln44_fu_432_p2);
    sensitive << ( phi_mul_reg_123 );
    sensitive << ( zext_ln44_1_fu_428_p1 );

    SC_METHOD(thread_add_ln45_1_fu_401_p2);
    sensitive << ( indvar_flatten_reg_157 );

    SC_METHOD(thread_add_ln48_1_fu_379_p2);
    sensitive << ( shl_ln48_mid1_fu_371_p3 );
    sensitive << ( zext_ln45_1_fu_367_p1 );

    SC_METHOD(thread_add_ln48_3_fu_459_p2);
    sensitive << ( zext_ln48_3_fu_455_p1 );
    sensitive << ( add_ln44_fu_432_p2 );

    SC_METHOD(thread_add_ln48_4_fu_450_p2);
    sensitive << ( select_ln45_1_reg_536 );
    sensitive << ( zext_ln48_2_fu_446_p1 );

    SC_METHOD(thread_add_ln48_5_fu_474_p2);
    sensitive << ( zext_ln48_4_fu_470_p1 );
    sensitive << ( trunc_ln44_fu_424_p1 );

    SC_METHOD(thread_add_ln48_6_fu_465_p2);
    sensitive << ( select_ln45_1_reg_536 );
    sensitive << ( zext_ln46_fu_438_p1 );

    SC_METHOD(thread_add_ln48_fu_275_p2);
    sensitive << ( zext_ln45_fu_263_p1 );
    sensitive << ( shl_ln_fu_267_p3 );

    SC_METHOD(thread_and_ln44_fu_341_p2);
    sensitive << ( icmp_ln46_fu_335_p2 );
    sensitive << ( xor_ln44_fu_329_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln42_fu_246_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln42_fu_246_p2 );

    SC_METHOD(thread_grp_fu_228_p0);
    sensitive << ( tmp_reg_597 );
    sensitive << ( tmp_i_reg_602 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_228_p1);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_generic_tanh_double_s_fu_200_ap_start);
    sensitive << ( grp_generic_tanh_double_s_fu_200_ap_start_reg );

    SC_METHOD(thread_i_fu_252_p2);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_icmp_ln42_fu_246_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_icmp_ln44_fu_281_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( indvar_flatten19_reg_135 );

    SC_METHOD(thread_icmp_ln45_fu_293_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln44_fu_281_p2 );
    sensitive << ( indvar_flatten_reg_157 );

    SC_METHOD(thread_icmp_ln46_fu_335_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln44_fu_281_p2 );
    sensitive << ( m_0_reg_189 );

    SC_METHOD(thread_k_fu_347_p2);
    sensitive << ( select_ln44_fu_299_p3 );

    SC_METHOD(thread_m_fu_441_p2);
    sensitive << ( select_ln45_reg_530 );

    SC_METHOD(thread_mul_ln44_fu_418_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( mul_ln44_fu_418_p10 );

    SC_METHOD(thread_mul_ln44_fu_418_p10);
    sensitive << ( select_ln44_1_reg_524 );

    SC_METHOD(thread_mul_ln44_fu_418_p2);
    sensitive << ( mul_ln44_fu_418_p1 );

    SC_METHOD(thread_or_ln45_fu_353_p2);
    sensitive << ( icmp_ln45_fu_293_p2 );
    sensitive << ( and_ln44_fu_341_p2 );

    SC_METHOD(thread_select_ln44_1_fu_313_p3);
    sensitive << ( j_0_reg_146 );
    sensitive << ( icmp_ln45_fu_293_p2 );
    sensitive << ( add_ln44_2_fu_307_p2 );

    SC_METHOD(thread_select_ln44_2_fu_321_p3);
    sensitive << ( icmp_ln45_fu_293_p2 );
    sensitive << ( add_ln48_fu_275_p2 );

    SC_METHOD(thread_select_ln44_fu_299_p3);
    sensitive << ( k_0_reg_168 );
    sensitive << ( icmp_ln45_fu_293_p2 );

    SC_METHOD(thread_select_ln45_1_fu_385_p3);
    sensitive << ( and_ln44_fu_341_p2 );
    sensitive << ( add_ln48_1_fu_379_p2 );
    sensitive << ( select_ln44_2_fu_321_p3 );

    SC_METHOD(thread_select_ln45_2_fu_393_p3);
    sensitive << ( select_ln44_fu_299_p3 );
    sensitive << ( and_ln44_fu_341_p2 );
    sensitive << ( k_fu_347_p2 );

    SC_METHOD(thread_select_ln45_3_fu_407_p3);
    sensitive << ( icmp_ln45_fu_293_p2 );
    sensitive << ( add_ln45_1_fu_401_p2 );

    SC_METHOD(thread_select_ln45_fu_359_p3);
    sensitive << ( m_0_reg_189 );
    sensitive << ( or_ln45_fu_353_p2 );

    SC_METHOD(thread_shl_ln48_mid1_fu_371_p3);
    sensitive << ( k_fu_347_p2 );

    SC_METHOD(thread_shl_ln_fu_267_p3);
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_trunc_ln44_fu_424_p1);
    sensitive << ( mul_ln44_fu_418_p2 );

    SC_METHOD(thread_xor_ln44_fu_329_p2);
    sensitive << ( icmp_ln45_fu_293_p2 );

    SC_METHOD(thread_zext_ln43_fu_258_p1);
    sensitive << ( phi_mul_reg_123 );

    SC_METHOD(thread_zext_ln44_1_fu_428_p1);
    sensitive << ( mul_ln44_fu_418_p2 );

    SC_METHOD(thread_zext_ln45_1_fu_367_p1);
    sensitive << ( k_fu_347_p2 );

    SC_METHOD(thread_zext_ln45_fu_263_p1);
    sensitive << ( k_0_reg_168 );

    SC_METHOD(thread_zext_ln46_fu_438_p1);
    sensitive << ( select_ln45_reg_530 );

    SC_METHOD(thread_zext_ln48_1_fu_484_p1);
    sensitive << ( add_ln48_5_reg_562 );

    SC_METHOD(thread_zext_ln48_2_fu_446_p1);
    sensitive << ( m_fu_441_p2 );

    SC_METHOD(thread_zext_ln48_3_fu_455_p1);
    sensitive << ( add_ln48_4_fu_450_p2 );

    SC_METHOD(thread_zext_ln48_4_fu_470_p1);
    sensitive << ( add_ln48_6_fu_465_p2 );

    SC_METHOD(thread_zext_ln48_fu_480_p1);
    sensitive << ( add_ln48_3_reg_557 );

    SC_METHOD(thread_zext_ln50_fu_488_p1);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln42_fu_246_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln44_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( grp_generic_tanh_double_s_fu_200_ap_done );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000001";
    grp_generic_tanh_double_s_fu_200_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "calculateLayer4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Layer3_Neurons_CPU_address0, "(port)Layer3_Neurons_CPU_address0");
    sc_trace(mVcdFile, Layer3_Neurons_CPU_ce0, "(port)Layer3_Neurons_CPU_ce0");
    sc_trace(mVcdFile, Layer3_Neurons_CPU_q0, "(port)Layer3_Neurons_CPU_q0");
    sc_trace(mVcdFile, Layer4_Neurons_CPU_address0, "(port)Layer4_Neurons_CPU_address0");
    sc_trace(mVcdFile, Layer4_Neurons_CPU_ce0, "(port)Layer4_Neurons_CPU_ce0");
    sc_trace(mVcdFile, Layer4_Neurons_CPU_we0, "(port)Layer4_Neurons_CPU_we0");
    sc_trace(mVcdFile, Layer4_Neurons_CPU_d0, "(port)Layer4_Neurons_CPU_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Layer3_Weights_CPU_address0, "Layer3_Weights_CPU_address0");
    sc_trace(mVcdFile, Layer3_Weights_CPU_ce0, "Layer3_Weights_CPU_ce0");
    sc_trace(mVcdFile, Layer3_Weights_CPU_q0, "Layer3_Weights_CPU_q0");
    sc_trace(mVcdFile, grp_fu_228_p2, "grp_fu_228_p2");
    sc_trace(mVcdFile, reg_234, "reg_234");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, add_ln42_fu_240_p2, "add_ln42_fu_240_p2");
    sc_trace(mVcdFile, add_ln42_reg_493, "add_ln42_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_252_p2, "i_fu_252_p2");
    sc_trace(mVcdFile, i_reg_501, "i_reg_501");
    sc_trace(mVcdFile, icmp_ln42_fu_246_p2, "icmp_ln42_fu_246_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln44_1_fu_287_p2, "add_ln44_1_fu_287_p2");
    sc_trace(mVcdFile, add_ln44_1_reg_519, "add_ln44_1_reg_519");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, select_ln44_1_fu_313_p3, "select_ln44_1_fu_313_p3");
    sc_trace(mVcdFile, select_ln44_1_reg_524, "select_ln44_1_reg_524");
    sc_trace(mVcdFile, icmp_ln44_fu_281_p2, "icmp_ln44_fu_281_p2");
    sc_trace(mVcdFile, select_ln45_fu_359_p3, "select_ln45_fu_359_p3");
    sc_trace(mVcdFile, select_ln45_reg_530, "select_ln45_reg_530");
    sc_trace(mVcdFile, select_ln45_1_fu_385_p3, "select_ln45_1_fu_385_p3");
    sc_trace(mVcdFile, select_ln45_1_reg_536, "select_ln45_1_reg_536");
    sc_trace(mVcdFile, select_ln45_2_fu_393_p3, "select_ln45_2_fu_393_p3");
    sc_trace(mVcdFile, select_ln45_2_reg_542, "select_ln45_2_reg_542");
    sc_trace(mVcdFile, select_ln45_3_fu_407_p3, "select_ln45_3_fu_407_p3");
    sc_trace(mVcdFile, select_ln45_3_reg_547, "select_ln45_3_reg_547");
    sc_trace(mVcdFile, m_fu_441_p2, "m_fu_441_p2");
    sc_trace(mVcdFile, m_reg_552, "m_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln48_3_fu_459_p2, "add_ln48_3_fu_459_p2");
    sc_trace(mVcdFile, add_ln48_3_reg_557, "add_ln48_3_reg_557");
    sc_trace(mVcdFile, add_ln48_5_fu_474_p2, "add_ln48_5_fu_474_p2");
    sc_trace(mVcdFile, add_ln48_5_reg_562, "add_ln48_5_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, Layer3_Weights_CPU_l_reg_577, "Layer3_Weights_CPU_l_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, Layer3_Neurons_CPU_l_reg_582, "Layer3_Neurons_CPU_l_reg_582");
    sc_trace(mVcdFile, grp_fu_216_p2, "grp_fu_216_p2");
    sc_trace(mVcdFile, tmp_7_reg_587, "tmp_7_reg_587");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_211_p2, "grp_fu_211_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_224_p1, "grp_fu_224_p1");
    sc_trace(mVcdFile, tmp_reg_597, "tmp_reg_597");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_return, "grp_generic_tanh_double_s_fu_200_ap_return");
    sc_trace(mVcdFile, tmp_i_reg_602, "tmp_i_reg_602");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_ready, "grp_generic_tanh_double_s_fu_200_ap_ready");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_done, "grp_generic_tanh_double_s_fu_200_ap_done");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_start, "grp_generic_tanh_double_s_fu_200_ap_start");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_idle, "grp_generic_tanh_double_s_fu_200_ap_idle");
    sc_trace(mVcdFile, i_0_reg_111, "i_0_reg_111");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, phi_mul_reg_123, "phi_mul_reg_123");
    sc_trace(mVcdFile, indvar_flatten19_reg_135, "indvar_flatten19_reg_135");
    sc_trace(mVcdFile, j_0_reg_146, "j_0_reg_146");
    sc_trace(mVcdFile, indvar_flatten_reg_157, "indvar_flatten_reg_157");
    sc_trace(mVcdFile, k_0_reg_168, "k_0_reg_168");
    sc_trace(mVcdFile, somme_2_reg_179, "somme_2_reg_179");
    sc_trace(mVcdFile, m_0_reg_189, "m_0_reg_189");
    sc_trace(mVcdFile, grp_generic_tanh_double_s_fu_200_ap_start_reg, "grp_generic_tanh_double_s_fu_200_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, zext_ln43_fu_258_p1, "zext_ln43_fu_258_p1");
    sc_trace(mVcdFile, zext_ln48_fu_480_p1, "zext_ln48_fu_480_p1");
    sc_trace(mVcdFile, zext_ln48_1_fu_484_p1, "zext_ln48_1_fu_484_p1");
    sc_trace(mVcdFile, zext_ln50_fu_488_p1, "zext_ln50_fu_488_p1");
    sc_trace(mVcdFile, grp_fu_220_p1, "grp_fu_220_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_228_p0, "grp_fu_228_p0");
    sc_trace(mVcdFile, grp_fu_228_p1, "grp_fu_228_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, zext_ln45_fu_263_p1, "zext_ln45_fu_263_p1");
    sc_trace(mVcdFile, shl_ln_fu_267_p3, "shl_ln_fu_267_p3");
    sc_trace(mVcdFile, icmp_ln45_fu_293_p2, "icmp_ln45_fu_293_p2");
    sc_trace(mVcdFile, add_ln44_2_fu_307_p2, "add_ln44_2_fu_307_p2");
    sc_trace(mVcdFile, add_ln48_fu_275_p2, "add_ln48_fu_275_p2");
    sc_trace(mVcdFile, icmp_ln46_fu_335_p2, "icmp_ln46_fu_335_p2");
    sc_trace(mVcdFile, xor_ln44_fu_329_p2, "xor_ln44_fu_329_p2");
    sc_trace(mVcdFile, select_ln44_fu_299_p3, "select_ln44_fu_299_p3");
    sc_trace(mVcdFile, and_ln44_fu_341_p2, "and_ln44_fu_341_p2");
    sc_trace(mVcdFile, or_ln45_fu_353_p2, "or_ln45_fu_353_p2");
    sc_trace(mVcdFile, k_fu_347_p2, "k_fu_347_p2");
    sc_trace(mVcdFile, shl_ln48_mid1_fu_371_p3, "shl_ln48_mid1_fu_371_p3");
    sc_trace(mVcdFile, zext_ln45_1_fu_367_p1, "zext_ln45_1_fu_367_p1");
    sc_trace(mVcdFile, add_ln48_1_fu_379_p2, "add_ln48_1_fu_379_p2");
    sc_trace(mVcdFile, select_ln44_2_fu_321_p3, "select_ln44_2_fu_321_p3");
    sc_trace(mVcdFile, add_ln45_1_fu_401_p2, "add_ln45_1_fu_401_p2");
    sc_trace(mVcdFile, mul_ln44_fu_418_p1, "mul_ln44_fu_418_p1");
    sc_trace(mVcdFile, mul_ln44_fu_418_p2, "mul_ln44_fu_418_p2");
    sc_trace(mVcdFile, zext_ln44_1_fu_428_p1, "zext_ln44_1_fu_428_p1");
    sc_trace(mVcdFile, zext_ln48_2_fu_446_p1, "zext_ln48_2_fu_446_p1");
    sc_trace(mVcdFile, add_ln48_4_fu_450_p2, "add_ln48_4_fu_450_p2");
    sc_trace(mVcdFile, zext_ln48_3_fu_455_p1, "zext_ln48_3_fu_455_p1");
    sc_trace(mVcdFile, add_ln44_fu_432_p2, "add_ln44_fu_432_p2");
    sc_trace(mVcdFile, zext_ln46_fu_438_p1, "zext_ln46_fu_438_p1");
    sc_trace(mVcdFile, add_ln48_6_fu_465_p2, "add_ln48_6_fu_465_p2");
    sc_trace(mVcdFile, zext_ln48_4_fu_470_p1, "zext_ln48_4_fu_470_p1");
    sc_trace(mVcdFile, trunc_ln44_fu_424_p1, "trunc_ln44_fu_424_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln44_fu_418_p10, "mul_ln44_fu_418_p10");
#endif

    }
}

calculateLayer4::~calculateLayer4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Layer3_Weights_CPU_U;
    delete grp_generic_tanh_double_s_fu_200;
    delete nerons_fadd_32ns_32ns_32_5_full_dsp_1_U37;
    delete nerons_fmul_32ns_32ns_32_4_max_dsp_1_U38;
    delete nerons_fptrunc_64ns_32_2_1_U39;
    delete nerons_fpext_32ns_64_2_1_U40;
    delete nerons_dmul_64ns_64ns_64_6_max_dsp_1_U41;
}

void calculateLayer4::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void calculateLayer4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_generic_tanh_double_s_fu_200_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            grp_generic_tanh_double_s_fu_200_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_generic_tanh_double_s_fu_200_ap_ready.read())) {
            grp_generic_tanh_double_s_fu_200_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        i_0_reg_111 = i_reg_501.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_111 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        indvar_flatten19_reg_135 = add_ln44_1_reg_519.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten19_reg_135 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        indvar_flatten_reg_157 = select_ln45_3_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten_reg_157 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        j_0_reg_146 = select_ln44_1_reg_524.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_reg_146 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        k_0_reg_168 = select_ln45_2_reg_542.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_0_reg_168 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        m_0_reg_189 = m_reg_552.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_0_reg_189 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        phi_mul_reg_123 = add_ln42_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_123 = ap_const_lv17_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        somme_2_reg_179 = grp_fu_211_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        somme_2_reg_179 = Layer3_Weights_CPU_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Layer3_Neurons_CPU_l_reg_582 = Layer3_Neurons_CPU_q0.read();
        Layer3_Weights_CPU_l_reg_577 = Layer3_Weights_CPU_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln42_reg_493 = add_ln42_fu_240_p2.read();
        i_reg_501 = i_fu_252_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln44_1_reg_519 = add_ln44_1_fu_287_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln48_3_reg_557 = add_ln48_3_fu_459_p2.read();
        add_ln48_5_reg_562 = add_ln48_5_fu_474_p2.read();
        m_reg_552 = m_fu_441_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_234 = grp_fu_228_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_281_p2.read()))) {
        select_ln44_1_reg_524 = select_ln44_1_fu_313_p3.read();
        select_ln45_1_reg_536 = select_ln45_1_fu_385_p3.read();
        select_ln45_2_reg_542 = select_ln45_2_fu_393_p3.read();
        select_ln45_3_reg_547 = select_ln45_3_fu_407_p3.read();
        select_ln45_reg_530 = select_ln45_fu_359_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_7_reg_587 = grp_fu_216_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(grp_generic_tanh_double_s_fu_200_ap_done.read(), ap_const_logic_1))) {
        tmp_i_reg_602 = grp_generic_tanh_double_s_fu_200_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_reg_597 = grp_fu_224_p1.read();
    }
}

void calculateLayer4::thread_Layer3_Neurons_CPU_address0() {
    Layer3_Neurons_CPU_address0 =  (sc_lv<11>) (zext_ln48_1_fu_484_p1.read());
}

void calculateLayer4::thread_Layer3_Neurons_CPU_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Layer3_Neurons_CPU_ce0 = ap_const_logic_1;
    } else {
        Layer3_Neurons_CPU_ce0 = ap_const_logic_0;
    }
}

void calculateLayer4::thread_Layer3_Weights_CPU_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Layer3_Weights_CPU_address0 =  (sc_lv<17>) (zext_ln48_fu_480_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Layer3_Weights_CPU_address0 =  (sc_lv<17>) (zext_ln43_fu_258_p1.read());
    } else {
        Layer3_Weights_CPU_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void calculateLayer4::thread_Layer3_Weights_CPU_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        Layer3_Weights_CPU_ce0 = ap_const_logic_1;
    } else {
        Layer3_Weights_CPU_ce0 = ap_const_logic_0;
    }
}

void calculateLayer4::thread_Layer4_Neurons_CPU_address0() {
    Layer4_Neurons_CPU_address0 =  (sc_lv<7>) (zext_ln50_fu_488_p1.read());
}

void calculateLayer4::thread_Layer4_Neurons_CPU_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        Layer4_Neurons_CPU_ce0 = ap_const_logic_1;
    } else {
        Layer4_Neurons_CPU_ce0 = ap_const_logic_0;
    }
}

void calculateLayer4::thread_Layer4_Neurons_CPU_d0() {
    Layer4_Neurons_CPU_d0 = grp_fu_220_p1.read();
}

void calculateLayer4::thread_Layer4_Neurons_CPU_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        Layer4_Neurons_CPU_we0 = ap_const_logic_1;
    } else {
        Layer4_Neurons_CPU_we0 = ap_const_logic_0;
    }
}

void calculateLayer4::thread_add_ln42_fu_240_p2() {
    add_ln42_fu_240_p2 = (!phi_mul_reg_123.read().is_01() || !ap_const_lv17_4E3.is_01())? sc_lv<17>(): (sc_biguint<17>(phi_mul_reg_123.read()) + sc_biguint<17>(ap_const_lv17_4E3));
}

void calculateLayer4::thread_add_ln44_1_fu_287_p2() {
    add_ln44_1_fu_287_p2 = (!indvar_flatten19_reg_135.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_flatten19_reg_135.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void calculateLayer4::thread_add_ln44_2_fu_307_p2() {
    add_ln44_2_fu_307_p2 = (!ap_const_lv6_1.is_01() || !j_0_reg_146.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(j_0_reg_146.read()));
}

void calculateLayer4::thread_add_ln44_fu_432_p2() {
    add_ln44_fu_432_p2 = (!phi_mul_reg_123.read().is_01() || !zext_ln44_1_fu_428_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(phi_mul_reg_123.read()) + sc_biguint<17>(zext_ln44_1_fu_428_p1.read()));
}

void calculateLayer4::thread_add_ln45_1_fu_401_p2() {
    add_ln45_1_fu_401_p2 = (!ap_const_lv6_1.is_01() || !indvar_flatten_reg_157.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1) + sc_biguint<6>(indvar_flatten_reg_157.read()));
}

void calculateLayer4::thread_add_ln48_1_fu_379_p2() {
    add_ln48_1_fu_379_p2 = (!shl_ln48_mid1_fu_371_p3.read().is_01() || !zext_ln45_1_fu_367_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(shl_ln48_mid1_fu_371_p3.read()) + sc_biguint<5>(zext_ln45_1_fu_367_p1.read()));
}

void calculateLayer4::thread_add_ln48_3_fu_459_p2() {
    add_ln48_3_fu_459_p2 = (!zext_ln48_3_fu_455_p1.read().is_01() || !add_ln44_fu_432_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(zext_ln48_3_fu_455_p1.read()) + sc_biguint<17>(add_ln44_fu_432_p2.read()));
}

void calculateLayer4::thread_add_ln48_4_fu_450_p2() {
    add_ln48_4_fu_450_p2 = (!zext_ln48_2_fu_446_p1.read().is_01() || !select_ln45_1_reg_536.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln48_2_fu_446_p1.read()) + sc_biguint<5>(select_ln45_1_reg_536.read()));
}

void calculateLayer4::thread_add_ln48_5_fu_474_p2() {
    add_ln48_5_fu_474_p2 = (!zext_ln48_4_fu_470_p1.read().is_01() || !trunc_ln44_fu_424_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln48_4_fu_470_p1.read()) + sc_biguint<11>(trunc_ln44_fu_424_p1.read()));
}

void calculateLayer4::thread_add_ln48_6_fu_465_p2() {
    add_ln48_6_fu_465_p2 = (!select_ln45_1_reg_536.read().is_01() || !zext_ln46_fu_438_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(select_ln45_1_reg_536.read()) + sc_biguint<5>(zext_ln46_fu_438_p1.read()));
}

void calculateLayer4::thread_add_ln48_fu_275_p2() {
    add_ln48_fu_275_p2 = (!zext_ln45_fu_263_p1.read().is_01() || !shl_ln_fu_267_p3.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln45_fu_263_p1.read()) + sc_biguint<5>(shl_ln_fu_267_p3.read()));
}

void calculateLayer4::thread_and_ln44_fu_341_p2() {
    and_ln44_fu_341_p2 = (icmp_ln46_fu_335_p2.read() & xor_ln44_fu_329_p2.read());
}

void calculateLayer4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void calculateLayer4::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void calculateLayer4::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void calculateLayer4::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void calculateLayer4::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void calculateLayer4::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void calculateLayer4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void calculateLayer4::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void calculateLayer4::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void calculateLayer4::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void calculateLayer4::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void calculateLayer4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void calculateLayer4::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void calculateLayer4::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void calculateLayer4::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void calculateLayer4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void calculateLayer4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void calculateLayer4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void calculateLayer4::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void calculateLayer4::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void calculateLayer4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln42_fu_246_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void calculateLayer4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void calculateLayer4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln42_fu_246_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void calculateLayer4::thread_grp_fu_228_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_228_p0 = tmp_i_reg_602.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_228_p0 = tmp_reg_597.read();
    } else {
        grp_fu_228_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void calculateLayer4::thread_grp_fu_228_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_228_p1 = ap_const_lv64_3FFB74538EF34D6A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_228_p1 = ap_const_lv64_3FE55555571F7693;
    } else {
        grp_fu_228_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void calculateLayer4::thread_grp_generic_tanh_double_s_fu_200_ap_start() {
    grp_generic_tanh_double_s_fu_200_ap_start = grp_generic_tanh_double_s_fu_200_ap_start_reg.read();
}

void calculateLayer4::thread_i_fu_252_p2() {
    i_fu_252_p2 = (!i_0_reg_111.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_111.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void calculateLayer4::thread_icmp_ln42_fu_246_p2() {
    icmp_ln42_fu_246_p2 = (!i_0_reg_111.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_111.read() == ap_const_lv7_64);
}

void calculateLayer4::thread_icmp_ln44_fu_281_p2() {
    icmp_ln44_fu_281_p2 = (!indvar_flatten19_reg_135.read().is_01() || !ap_const_lv11_4E2.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten19_reg_135.read() == ap_const_lv11_4E2);
}

void calculateLayer4::thread_icmp_ln45_fu_293_p2() {
    icmp_ln45_fu_293_p2 = (!indvar_flatten_reg_157.read().is_01() || !ap_const_lv6_19.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_157.read() == ap_const_lv6_19);
}

void calculateLayer4::thread_icmp_ln46_fu_335_p2() {
    icmp_ln46_fu_335_p2 = (!m_0_reg_189.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_189.read() == ap_const_lv3_5);
}

void calculateLayer4::thread_k_fu_347_p2() {
    k_fu_347_p2 = (!ap_const_lv3_1.is_01() || !select_ln44_fu_299_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(select_ln44_fu_299_p3.read()));
}

void calculateLayer4::thread_m_fu_441_p2() {
    m_fu_441_p2 = (!ap_const_lv3_1.is_01() || !select_ln45_reg_530.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(select_ln45_reg_530.read()));
}

void calculateLayer4::thread_mul_ln44_fu_418_p1() {
    mul_ln44_fu_418_p1 =  (sc_lv<6>) (mul_ln44_fu_418_p10.read());
}

void calculateLayer4::thread_mul_ln44_fu_418_p10() {
    mul_ln44_fu_418_p10 = esl_zext<12,6>(select_ln44_1_reg_524.read());
}

void calculateLayer4::thread_mul_ln44_fu_418_p2() {
    mul_ln44_fu_418_p2 = (!ap_const_lv12_19.is_01() || !mul_ln44_fu_418_p1.read().is_01())? sc_lv<12>(): sc_biguint<12>(ap_const_lv12_19) * sc_biguint<6>(mul_ln44_fu_418_p1.read());
}

void calculateLayer4::thread_or_ln45_fu_353_p2() {
    or_ln45_fu_353_p2 = (and_ln44_fu_341_p2.read() | icmp_ln45_fu_293_p2.read());
}

void calculateLayer4::thread_select_ln44_1_fu_313_p3() {
    select_ln44_1_fu_313_p3 = (!icmp_ln45_fu_293_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln45_fu_293_p2.read()[0].to_bool())? add_ln44_2_fu_307_p2.read(): j_0_reg_146.read());
}

void calculateLayer4::thread_select_ln44_2_fu_321_p3() {
    select_ln44_2_fu_321_p3 = (!icmp_ln45_fu_293_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln45_fu_293_p2.read()[0].to_bool())? ap_const_lv5_0: add_ln48_fu_275_p2.read());
}

void calculateLayer4::thread_select_ln44_fu_299_p3() {
    select_ln44_fu_299_p3 = (!icmp_ln45_fu_293_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln45_fu_293_p2.read()[0].to_bool())? ap_const_lv3_0: k_0_reg_168.read());
}

void calculateLayer4::thread_select_ln45_1_fu_385_p3() {
    select_ln45_1_fu_385_p3 = (!and_ln44_fu_341_p2.read()[0].is_01())? sc_lv<5>(): ((and_ln44_fu_341_p2.read()[0].to_bool())? add_ln48_1_fu_379_p2.read(): select_ln44_2_fu_321_p3.read());
}

void calculateLayer4::thread_select_ln45_2_fu_393_p3() {
    select_ln45_2_fu_393_p3 = (!and_ln44_fu_341_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln44_fu_341_p2.read()[0].to_bool())? k_fu_347_p2.read(): select_ln44_fu_299_p3.read());
}

void calculateLayer4::thread_select_ln45_3_fu_407_p3() {
    select_ln45_3_fu_407_p3 = (!icmp_ln45_fu_293_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln45_fu_293_p2.read()[0].to_bool())? ap_const_lv6_1: add_ln45_1_fu_401_p2.read());
}

void calculateLayer4::thread_select_ln45_fu_359_p3() {
    select_ln45_fu_359_p3 = (!or_ln45_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((or_ln45_fu_353_p2.read()[0].to_bool())? ap_const_lv3_0: m_0_reg_189.read());
}

void calculateLayer4::thread_shl_ln48_mid1_fu_371_p3() {
    shl_ln48_mid1_fu_371_p3 = esl_concat<3,2>(k_fu_347_p2.read(), ap_const_lv2_0);
}

void calculateLayer4::thread_shl_ln_fu_267_p3() {
    shl_ln_fu_267_p3 = esl_concat<3,2>(k_0_reg_168.read(), ap_const_lv2_0);
}

void calculateLayer4::thread_trunc_ln44_fu_424_p1() {
    trunc_ln44_fu_424_p1 = mul_ln44_fu_418_p2.read().range(11-1, 0);
}

void calculateLayer4::thread_xor_ln44_fu_329_p2() {
    xor_ln44_fu_329_p2 = (icmp_ln45_fu_293_p2.read() ^ ap_const_lv1_1);
}

void calculateLayer4::thread_zext_ln43_fu_258_p1() {
    zext_ln43_fu_258_p1 = esl_zext<64,17>(phi_mul_reg_123.read());
}

void calculateLayer4::thread_zext_ln44_1_fu_428_p1() {
    zext_ln44_1_fu_428_p1 = esl_zext<17,12>(mul_ln44_fu_418_p2.read());
}

void calculateLayer4::thread_zext_ln45_1_fu_367_p1() {
    zext_ln45_1_fu_367_p1 = esl_zext<5,3>(k_fu_347_p2.read());
}

void calculateLayer4::thread_zext_ln45_fu_263_p1() {
    zext_ln45_fu_263_p1 = esl_zext<5,3>(k_0_reg_168.read());
}

void calculateLayer4::thread_zext_ln46_fu_438_p1() {
    zext_ln46_fu_438_p1 = esl_zext<5,3>(select_ln45_reg_530.read());
}

void calculateLayer4::thread_zext_ln48_1_fu_484_p1() {
    zext_ln48_1_fu_484_p1 = esl_zext<64,11>(add_ln48_5_reg_562.read());
}

void calculateLayer4::thread_zext_ln48_2_fu_446_p1() {
    zext_ln48_2_fu_446_p1 = esl_zext<5,3>(m_fu_441_p2.read());
}

void calculateLayer4::thread_zext_ln48_3_fu_455_p1() {
    zext_ln48_3_fu_455_p1 = esl_zext<17,5>(add_ln48_4_fu_450_p2.read());
}

void calculateLayer4::thread_zext_ln48_4_fu_470_p1() {
    zext_ln48_4_fu_470_p1 = esl_zext<11,5>(add_ln48_6_fu_465_p2.read());
}

void calculateLayer4::thread_zext_ln48_fu_480_p1() {
    zext_ln48_fu_480_p1 = esl_zext<64,17>(add_ln48_3_reg_557.read());
}

void calculateLayer4::thread_zext_ln50_fu_488_p1() {
    zext_ln50_fu_488_p1 = esl_zext<64,7>(i_0_reg_111.read());
}

void calculateLayer4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln42_fu_246_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln44_fu_281_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(grp_generic_tanh_double_s_fu_200_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<33>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

