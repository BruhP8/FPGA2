// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nerons,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.514000,HLS_SYN_LAT=2865346,HLS_SYN_TPT=none,HLS_SYN_MEM=324,HLS_SYN_DSP=108,HLS_SYN_FF=28332,HLS_SYN_LUT=38307,HLS_VERSION=2019_1}" *)

module nerons (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Layer2_Neurons_CPU_address0,
        Layer2_Neurons_CPU_ce0,
        Layer2_Neurons_CPU_q0,
        Layer2_Neurons_CPU_address1,
        Layer2_Neurons_CPU_ce1,
        Layer2_Neurons_CPU_q1,
        Layer5_Neurons_CPU_address0,
        Layer5_Neurons_CPU_ce0,
        Layer5_Neurons_CPU_we0,
        Layer5_Neurons_CPU_d0
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] Layer2_Neurons_CPU_address0;
output   Layer2_Neurons_CPU_ce0;
input  [31:0] Layer2_Neurons_CPU_q0;
output  [9:0] Layer2_Neurons_CPU_address1;
output   Layer2_Neurons_CPU_ce1;
input  [31:0] Layer2_Neurons_CPU_q1;
output  [3:0] Layer5_Neurons_CPU_address0;
output   Layer5_Neurons_CPU_ce0;
output   Layer5_Neurons_CPU_we0;
output  [63:0] Layer5_Neurons_CPU_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Layer5_Neurons_CPU_ce0;
reg Layer5_Neurons_CPU_we0;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] Layer4_Weights_CPU_address0;
reg    Layer4_Weights_CPU_ce0;
wire   [31:0] Layer4_Weights_CPU_q0;
wire   [63:0] grp_fu_211_p2;
reg   [63:0] reg_217;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state32;
wire   [9:0] add_ln58_fu_223_p2;
reg   [9:0] add_ln58_reg_283;
wire    ap_CS_fsm_state5;
wire   [3:0] i_fu_235_p2;
reg   [3:0] i_reg_291;
wire   [0:0] icmp_ln58_fu_229_p2;
wire    ap_CS_fsm_state6;
wire   [6:0] j_fu_252_p2;
reg   [6:0] j_reg_309;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln60_fu_246_p2;
reg   [31:0] Layer4_Weights_CPU_l_reg_324;
wire    ap_CS_fsm_state8;
wire   [31:0] Layer4_Neurons_CPU_q0;
reg   [31:0] Layer4_Neurons_CPU_l_reg_329;
wire   [31:0] grp_fu_203_p2;
reg   [31:0] tmp_3_i_reg_334;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_198_p2;
wire    ap_CS_fsm_state17;
wire   [63:0] grp_fu_207_p1;
reg   [63:0] tmp_i_reg_344;
wire    ap_CS_fsm_state18;
wire   [63:0] grp_generic_tanh_double_s_fu_187_ap_return;
reg   [63:0] tmp_i_i_reg_349;
wire    ap_CS_fsm_state26;
wire    grp_generic_tanh_double_s_fu_187_ap_ready;
wire    grp_generic_tanh_double_s_fu_187_ap_done;
reg   [10:0] Layer3_Neurons_CPU_address0;
reg    Layer3_Neurons_CPU_ce0;
reg    Layer3_Neurons_CPU_we0;
wire   [31:0] Layer3_Neurons_CPU_q0;
reg   [6:0] Layer4_Neurons_CPU_address0;
reg    Layer4_Neurons_CPU_ce0;
reg    Layer4_Neurons_CPU_we0;
wire    grp_calculateLayer3_fu_157_ap_start;
wire    grp_calculateLayer3_fu_157_ap_done;
wire    grp_calculateLayer3_fu_157_ap_idle;
wire    grp_calculateLayer3_fu_157_ap_ready;
wire   [9:0] grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address0;
wire    grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce0;
wire   [9:0] grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address1;
wire    grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce1;
wire   [10:0] grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_address0;
wire    grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_ce0;
wire    grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_we0;
wire   [31:0] grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_d0;
wire    grp_calculateLayer4_fu_173_ap_start;
wire    grp_calculateLayer4_fu_173_ap_done;
wire    grp_calculateLayer4_fu_173_ap_idle;
wire    grp_calculateLayer4_fu_173_ap_ready;
wire   [10:0] grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_address0;
wire    grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_ce0;
wire   [6:0] grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_address0;
wire    grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_ce0;
wire    grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_we0;
wire   [31:0] grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_d0;
wire    grp_generic_tanh_double_s_fu_187_ap_start;
wire    grp_generic_tanh_double_s_fu_187_ap_idle;
reg   [3:0] i_0_i_reg_112;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state33;
reg   [9:0] phi_mul_reg_124;
reg   [31:0] somme_0_i_reg_136;
reg   [6:0] j_0_i_reg_146;
reg    grp_calculateLayer3_fu_157_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_calculateLayer4_fu_173_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_generic_tanh_double_s_fu_187_ap_start_reg;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln59_fu_241_p1;
wire   [63:0] zext_ln61_fu_268_p1;
wire   [63:0] zext_ln61_1_fu_273_p1;
wire   [63:0] zext_ln62_fu_278_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state9;
reg   [63:0] grp_fu_211_p0;
reg   [63:0] grp_fu_211_p1;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state27;
wire   [9:0] zext_ln61_2_fu_258_p1;
wire   [9:0] add_ln61_1_fu_262_p2;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 grp_calculateLayer3_fu_157_ap_start_reg = 1'b0;
#0 grp_calculateLayer4_fu_173_ap_start_reg = 1'b0;
#0 grp_generic_tanh_double_s_fu_187_ap_start_reg = 1'b0;
end

nerons_Layer4_Weights_CPU #(
    .DataWidth( 32 ),
    .AddressRange( 1010 ),
    .AddressWidth( 10 ))
Layer4_Weights_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Layer4_Weights_CPU_address0),
    .ce0(Layer4_Weights_CPU_ce0),
    .q0(Layer4_Weights_CPU_q0)
);

nerons_Layer3_Neurons_CPU #(
    .DataWidth( 32 ),
    .AddressRange( 1250 ),
    .AddressWidth( 11 ))
Layer3_Neurons_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Layer3_Neurons_CPU_address0),
    .ce0(Layer3_Neurons_CPU_ce0),
    .we0(Layer3_Neurons_CPU_we0),
    .d0(grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_d0),
    .q0(Layer3_Neurons_CPU_q0)
);

nerons_Layer4_Neurons_CPU #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
Layer4_Neurons_CPU_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Layer4_Neurons_CPU_address0),
    .ce0(Layer4_Neurons_CPU_ce0),
    .we0(Layer4_Neurons_CPU_we0),
    .d0(grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_d0),
    .q0(Layer4_Neurons_CPU_q0)
);

calculateLayer3 grp_calculateLayer3_fu_157(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_calculateLayer3_fu_157_ap_start),
    .ap_done(grp_calculateLayer3_fu_157_ap_done),
    .ap_idle(grp_calculateLayer3_fu_157_ap_idle),
    .ap_ready(grp_calculateLayer3_fu_157_ap_ready),
    .Layer2_Neurons_CPU_address0(grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address0),
    .Layer2_Neurons_CPU_ce0(grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce0),
    .Layer2_Neurons_CPU_q0(Layer2_Neurons_CPU_q0),
    .Layer2_Neurons_CPU_address1(grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address1),
    .Layer2_Neurons_CPU_ce1(grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce1),
    .Layer2_Neurons_CPU_q1(Layer2_Neurons_CPU_q1),
    .Layer3_Neurons_CPU_address0(grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_address0),
    .Layer3_Neurons_CPU_ce0(grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_ce0),
    .Layer3_Neurons_CPU_we0(grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_we0),
    .Layer3_Neurons_CPU_d0(grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_d0)
);

calculateLayer4 grp_calculateLayer4_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_calculateLayer4_fu_173_ap_start),
    .ap_done(grp_calculateLayer4_fu_173_ap_done),
    .ap_idle(grp_calculateLayer4_fu_173_ap_idle),
    .ap_ready(grp_calculateLayer4_fu_173_ap_ready),
    .Layer3_Neurons_CPU_address0(grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_address0),
    .Layer3_Neurons_CPU_ce0(grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_ce0),
    .Layer3_Neurons_CPU_q0(Layer3_Neurons_CPU_q0),
    .Layer4_Neurons_CPU_address0(grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_address0),
    .Layer4_Neurons_CPU_ce0(grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_ce0),
    .Layer4_Neurons_CPU_we0(grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_we0),
    .Layer4_Neurons_CPU_d0(grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_d0)
);

generic_tanh_double_s grp_generic_tanh_double_s_fu_187(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_tanh_double_s_fu_187_ap_start),
    .ap_done(grp_generic_tanh_double_s_fu_187_ap_done),
    .ap_idle(grp_generic_tanh_double_s_fu_187_ap_idle),
    .ap_ready(grp_generic_tanh_double_s_fu_187_ap_ready),
    .t_in(reg_217),
    .ap_return(grp_generic_tanh_double_s_fu_187_ap_return)
);

nerons_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nerons_fadd_32ns_32ns_32_5_full_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(somme_0_i_reg_136),
    .din1(tmp_3_i_reg_334),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

nerons_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
nerons_fmul_32ns_32ns_32_4_max_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Layer4_Weights_CPU_l_reg_324),
    .din1(Layer4_Neurons_CPU_l_reg_329),
    .ce(1'b1),
    .dout(grp_fu_203_p2)
);

nerons_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
nerons_fpext_32ns_64_2_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(somme_0_i_reg_136),
    .ce(1'b1),
    .dout(grp_fu_207_p1)
);

nerons_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
nerons_dmul_64ns_64ns_64_6_max_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(grp_fu_211_p1),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_calculateLayer3_fu_157_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_calculateLayer3_fu_157_ap_start_reg <= 1'b1;
        end else if ((grp_calculateLayer3_fu_157_ap_ready == 1'b1)) begin
            grp_calculateLayer3_fu_157_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_calculateLayer4_fu_173_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_calculateLayer4_fu_173_ap_start_reg <= 1'b1;
        end else if ((grp_calculateLayer4_fu_173_ap_ready == 1'b1)) begin
            grp_calculateLayer4_fu_173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_tanh_double_s_fu_187_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            grp_generic_tanh_double_s_fu_187_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_double_s_fu_187_ap_ready == 1'b1)) begin
            grp_generic_tanh_double_s_fu_187_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_0_i_reg_112 <= i_reg_291;
    end else if (((grp_calculateLayer4_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_i_reg_112 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_0_i_reg_146 <= j_reg_309;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_i_reg_146 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        phi_mul_reg_124 <= add_ln58_reg_283;
    end else if (((grp_calculateLayer4_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_124 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        somme_0_i_reg_136 <= grp_fu_198_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        somme_0_i_reg_136 <= Layer4_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Layer4_Neurons_CPU_l_reg_329 <= Layer4_Neurons_CPU_q0;
        Layer4_Weights_CPU_l_reg_324 <= Layer4_Weights_CPU_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln58_reg_283 <= add_ln58_fu_223_p2;
        i_reg_291 <= i_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_309 <= j_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_217 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_3_i_reg_334 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (grp_generic_tanh_double_s_fu_187_ap_done == 1'b1))) begin
        tmp_i_i_reg_349 <= grp_generic_tanh_double_s_fu_187_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_i_reg_344 <= grp_fu_207_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer3_Neurons_CPU_address0 = grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer3_Neurons_CPU_address0 = grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_address0;
    end else begin
        Layer3_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer3_Neurons_CPU_ce0 = grp_calculateLayer4_fu_173_Layer3_Neurons_CPU_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer3_Neurons_CPU_ce0 = grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_ce0;
    end else begin
        Layer3_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Layer3_Neurons_CPU_we0 = grp_calculateLayer3_fu_157_Layer3_Neurons_CPU_we0;
    end else begin
        Layer3_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Layer4_Neurons_CPU_address0 = zext_ln61_1_fu_273_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer4_Neurons_CPU_address0 = grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_address0;
    end else begin
        Layer4_Neurons_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Layer4_Neurons_CPU_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer4_Neurons_CPU_ce0 = grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_ce0;
    end else begin
        Layer4_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Layer4_Neurons_CPU_we0 = grp_calculateLayer4_fu_173_Layer4_Neurons_CPU_we0;
    end else begin
        Layer4_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Layer4_Weights_CPU_address0 = zext_ln61_fu_268_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Layer4_Weights_CPU_address0 = zext_ln59_fu_241_p1;
    end else begin
        Layer4_Weights_CPU_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        Layer4_Weights_CPU_ce0 = 1'b1;
    end else begin
        Layer4_Weights_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        Layer5_Neurons_CPU_ce0 = 1'b1;
    end else begin
        Layer5_Neurons_CPU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        Layer5_Neurons_CPU_we0 = 1'b1;
    end else begin
        Layer5_Neurons_CPU_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln58_fu_229_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln58_fu_229_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_211_p0 = tmp_i_i_reg_349;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_211_p0 = tmp_i_reg_344;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_211_p1 = 64'd4610406545773251946;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_211_p1 = 64'd4604180019078461075;
    end else begin
        grp_fu_211_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_calculateLayer3_fu_157_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_calculateLayer4_fu_173_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln58_fu_229_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln60_fu_246_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_generic_tanh_double_s_fu_187_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Layer2_Neurons_CPU_address0 = grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address0;

assign Layer2_Neurons_CPU_address1 = grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_address1;

assign Layer2_Neurons_CPU_ce0 = grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce0;

assign Layer2_Neurons_CPU_ce1 = grp_calculateLayer3_fu_157_Layer2_Neurons_CPU_ce1;

assign Layer5_Neurons_CPU_address0 = zext_ln62_fu_278_p1;

assign Layer5_Neurons_CPU_d0 = reg_217;

assign add_ln58_fu_223_p2 = (phi_mul_reg_124 + 10'd101);

assign add_ln61_1_fu_262_p2 = (zext_ln61_2_fu_258_p1 + phi_mul_reg_124);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_calculateLayer3_fu_157_ap_start = grp_calculateLayer3_fu_157_ap_start_reg;

assign grp_calculateLayer4_fu_173_ap_start = grp_calculateLayer4_fu_173_ap_start_reg;

assign grp_generic_tanh_double_s_fu_187_ap_start = grp_generic_tanh_double_s_fu_187_ap_start_reg;

assign i_fu_235_p2 = (i_0_i_reg_112 + 4'd1);

assign icmp_ln58_fu_229_p2 = ((i_0_i_reg_112 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_246_p2 = ((j_0_i_reg_146 == 7'd100) ? 1'b1 : 1'b0);

assign j_fu_252_p2 = (j_0_i_reg_146 + 7'd1);

assign zext_ln59_fu_241_p1 = phi_mul_reg_124;

assign zext_ln61_1_fu_273_p1 = j_0_i_reg_146;

assign zext_ln61_2_fu_258_p1 = j_fu_252_p2;

assign zext_ln61_fu_268_p1 = add_ln61_1_fu_262_p2;

assign zext_ln62_fu_278_p1 = i_0_i_reg_112;

endmodule //nerons
